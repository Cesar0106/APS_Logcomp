Terminals unused in grammar

    SPACE
    NOT
    PRINT
    ELSE
    HASHTAG
    IDENTATION


State 0 conflicts: 4 shift/reduce, 1 reduce/reduce
State 29 conflicts: 4 shift/reduce, 1 reduce/reduce
State 43 conflicts: 2 shift/reduce
State 44 conflicts: 2 shift/reduce
State 59 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: ε
    3           | statement BREAKLINE
    4           | statements statement BREAKLINE

    5 block: LEFT_BRACES statements RIGHT_BRACES BREAKLINE

    6 statement: ε
    7          | var_declaration
    8          | assignment
    9          | for_loop
   10          | IF bool_expression block

   11 var_declaration: VAR IDENTIFIER TYPE
   12                | VAR IDENTIFIER TYPE ASSIGN expression

   13 assignment: IDENTIFIER ASSIGN expression
   14           | VAR IDENTIFIER TYPE ASSIGN expression

   15 for_loop: FOR LEFT_PARENTHESIS assignment SEMICOLON bool_expression SEMICOLON assignment RIGHT_PARENTHESIS block

   16 bool_expression: expression EQUAL expression
   17                | expression GREATER expression
   18                | expression LESS expression
   19                | bool_expression OR bool_expression
   20                | bool_expression AND bool_expression

   21 expression: term
   22           | expression PLUS term
   23           | expression MINUS term

   24 term: factor
   25     | term TIMES factor
   26     | term DIVIDE factor

   27 factor: NUMBER
   28       | IDENTIFIER
   29       | STRING
   30       | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUMBER (258) 27
    STRING (259) 29
    IDENTIFIER (260) 11 12 13 14 28
    SPACE (261)
    BREAKLINE (262) 3 4 5
    LEFT_PARENTHESIS (263) 15 30
    RIGHT_PARENTHESIS (264) 15 30
    EQUAL (265) 16
    ASSIGN (266) 12 13 14
    GREATER (267) 17
    LESS (268) 18
    OR (269) 19
    AND (270) 20
    NOT (271)
    PLUS (272) 22
    MINUS (273) 23
    TIMES (274) 25
    DIVIDE (275) 26
    SEMICOLON (276) 15
    PRINT (277)
    IF (278) 10
    ELSE (279)
    FOR (280) 15
    VAR (281) 11 12 14
    TYPE (282) 11 12 14
    HASHTAG (283)
    LEFT_BRACES (284) 5
    RIGHT_BRACES (285) 5
    IDENTATION (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    statements (34)
        on left: 2 3 4
        on right: 1 4 5
    block (35)
        on left: 5
        on right: 10 15
    statement (36)
        on left: 6 7 8 9 10
        on right: 3 4
    var_declaration (37)
        on left: 11 12
        on right: 7
    assignment (38)
        on left: 13 14
        on right: 8 15
    for_loop (39)
        on left: 15
        on right: 9
    bool_expression (40)
        on left: 16 17 18 19 20
        on right: 10 15 19 20
    expression (41)
        on left: 21 22 23
        on right: 12 13 14 16 17 18 22 23 30
    term (42)
        on left: 24 25 26
        on right: 21 22 23 25 26
    factor (43)
        on left: 27 28 29 30
        on right: 24 25 26


State 0

    0 $accept: • program $end

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    VAR         shift, and go to state 4

    IDENTIFIER  [reduce using rule 2 (statements)]
    BREAKLINE   reduce using rule 2 (statements)
    BREAKLINE   [reduce using rule 6 (statement)]
    IF          [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    VAR         [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    program          go to state 5
    statements       go to state 6
    statement        go to state 7
    var_declaration  go to state 8
    assignment       go to state 9
    for_loop         go to state 10


State 1

   13 assignment: IDENTIFIER • ASSIGN expression

    ASSIGN  shift, and go to state 11


State 2

   10 statement: IF • bool_expression block

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    bool_expression  go to state 16
    expression       go to state 17
    term             go to state 18
    factor           go to state 19


State 3

   15 for_loop: FOR • LEFT_PARENTHESIS assignment SEMICOLON bool_expression SEMICOLON assignment RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 20


State 4

   11 var_declaration: VAR • IDENTIFIER TYPE
   12                | VAR • IDENTIFIER TYPE ASSIGN expression
   14 assignment: VAR • IDENTIFIER TYPE ASSIGN expression

    IDENTIFIER  shift, and go to state 21


State 5

    0 $accept: program • $end

    $end  shift, and go to state 22


State 6

    1 program: statements •
    4 statements: statements • statement BREAKLINE

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    VAR         shift, and go to state 4

    BREAKLINE  reduce using rule 6 (statement)
    $default   reduce using rule 1 (program)

    statement        go to state 23
    var_declaration  go to state 8
    assignment       go to state 9
    for_loop         go to state 10


State 7

    3 statements: statement • BREAKLINE

    BREAKLINE  shift, and go to state 24


State 8

    7 statement: var_declaration •

    $default  reduce using rule 7 (statement)


State 9

    8 statement: assignment •

    $default  reduce using rule 8 (statement)


State 10

    9 statement: for_loop •

    $default  reduce using rule 9 (statement)


State 11

   13 assignment: IDENTIFIER ASSIGN • expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    expression  go to state 25
    term        go to state 18
    factor      go to state 19


State 12

   27 factor: NUMBER •

    $default  reduce using rule 27 (factor)


State 13

   29 factor: STRING •

    $default  reduce using rule 29 (factor)


State 14

   28 factor: IDENTIFIER •

    $default  reduce using rule 28 (factor)


State 15

   30 factor: LEFT_PARENTHESIS • expression RIGHT_PARENTHESIS

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    expression  go to state 26
    term        go to state 18
    factor      go to state 19


State 16

   10 statement: IF bool_expression • block
   19 bool_expression: bool_expression • OR bool_expression
   20                | bool_expression • AND bool_expression

    OR           shift, and go to state 27
    AND          shift, and go to state 28
    LEFT_BRACES  shift, and go to state 29

    block  go to state 30


State 17

   16 bool_expression: expression • EQUAL expression
   17                | expression • GREATER expression
   18                | expression • LESS expression
   22 expression: expression • PLUS term
   23           | expression • MINUS term

    EQUAL    shift, and go to state 31
    GREATER  shift, and go to state 32
    LESS     shift, and go to state 33
    PLUS     shift, and go to state 34
    MINUS    shift, and go to state 35


State 18

   21 expression: term •
   25 term: term • TIMES factor
   26     | term • DIVIDE factor

    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    $default  reduce using rule 21 (expression)


State 19

   24 term: factor •

    $default  reduce using rule 24 (term)


State 20

   15 for_loop: FOR LEFT_PARENTHESIS • assignment SEMICOLON bool_expression SEMICOLON assignment RIGHT_PARENTHESIS block

    IDENTIFIER  shift, and go to state 1
    VAR         shift, and go to state 38

    assignment  go to state 39


State 21

   11 var_declaration: VAR IDENTIFIER • TYPE
   12                | VAR IDENTIFIER • TYPE ASSIGN expression
   14 assignment: VAR IDENTIFIER • TYPE ASSIGN expression

    TYPE  shift, and go to state 40


State 22

    0 $accept: program $end •

    $default  accept


State 23

    4 statements: statements statement • BREAKLINE

    BREAKLINE  shift, and go to state 41


State 24

    3 statements: statement BREAKLINE •

    $default  reduce using rule 3 (statements)


State 25

   13 assignment: IDENTIFIER ASSIGN expression •
   22 expression: expression • PLUS term
   23           | expression • MINUS term

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    $default  reduce using rule 13 (assignment)


State 26

   22 expression: expression • PLUS term
   23           | expression • MINUS term
   30 factor: LEFT_PARENTHESIS expression • RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 42
    PLUS               shift, and go to state 34
    MINUS              shift, and go to state 35


State 27

   19 bool_expression: bool_expression OR • bool_expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    bool_expression  go to state 43
    expression       go to state 17
    term             go to state 18
    factor           go to state 19


State 28

   20 bool_expression: bool_expression AND • bool_expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    bool_expression  go to state 44
    expression       go to state 17
    term             go to state 18
    factor           go to state 19


State 29

    5 block: LEFT_BRACES • statements RIGHT_BRACES BREAKLINE

    IDENTIFIER  shift, and go to state 1
    IF          shift, and go to state 2
    FOR         shift, and go to state 3
    VAR         shift, and go to state 4

    IDENTIFIER  [reduce using rule 2 (statements)]
    BREAKLINE   reduce using rule 2 (statements)
    BREAKLINE   [reduce using rule 6 (statement)]
    IF          [reduce using rule 2 (statements)]
    FOR         [reduce using rule 2 (statements)]
    VAR         [reduce using rule 2 (statements)]
    $default    reduce using rule 2 (statements)

    statements       go to state 45
    statement        go to state 7
    var_declaration  go to state 8
    assignment       go to state 9
    for_loop         go to state 10


State 30

   10 statement: IF bool_expression block •

    $default  reduce using rule 10 (statement)


State 31

   16 bool_expression: expression EQUAL • expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    expression  go to state 46
    term        go to state 18
    factor      go to state 19


State 32

   17 bool_expression: expression GREATER • expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    expression  go to state 47
    term        go to state 18
    factor      go to state 19


State 33

   18 bool_expression: expression LESS • expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    expression  go to state 48
    term        go to state 18
    factor      go to state 19


State 34

   22 expression: expression PLUS • term

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    term    go to state 49
    factor  go to state 19


State 35

   23 expression: expression MINUS • term

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    term    go to state 50
    factor  go to state 19


State 36

   25 term: term TIMES • factor

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    factor  go to state 51


State 37

   26 term: term DIVIDE • factor

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    factor  go to state 52


State 38

   14 assignment: VAR • IDENTIFIER TYPE ASSIGN expression

    IDENTIFIER  shift, and go to state 53


State 39

   15 for_loop: FOR LEFT_PARENTHESIS assignment • SEMICOLON bool_expression SEMICOLON assignment RIGHT_PARENTHESIS block

    SEMICOLON  shift, and go to state 54


State 40

   11 var_declaration: VAR IDENTIFIER TYPE •
   12                | VAR IDENTIFIER TYPE • ASSIGN expression
   14 assignment: VAR IDENTIFIER TYPE • ASSIGN expression

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 11 (var_declaration)


State 41

    4 statements: statements statement BREAKLINE •

    $default  reduce using rule 4 (statements)


State 42

   30 factor: LEFT_PARENTHESIS expression RIGHT_PARENTHESIS •

    $default  reduce using rule 30 (factor)


State 43

   19 bool_expression: bool_expression • OR bool_expression
   19                | bool_expression OR bool_expression •
   20                | bool_expression • AND bool_expression

    OR   shift, and go to state 27
    AND  shift, and go to state 28

    OR        [reduce using rule 19 (bool_expression)]
    AND       [reduce using rule 19 (bool_expression)]
    $default  reduce using rule 19 (bool_expression)


State 44

   19 bool_expression: bool_expression • OR bool_expression
   20                | bool_expression • AND bool_expression
   20                | bool_expression AND bool_expression •

    OR   shift, and go to state 27
    AND  shift, and go to state 28

    OR        [reduce using rule 20 (bool_expression)]
    AND       [reduce using rule 20 (bool_expression)]
    $default  reduce using rule 20 (bool_expression)


State 45

    4 statements: statements • statement BREAKLINE
    5 block: LEFT_BRACES statements • RIGHT_BRACES BREAKLINE

    IDENTIFIER    shift, and go to state 1
    IF            shift, and go to state 2
    FOR           shift, and go to state 3
    VAR           shift, and go to state 4
    RIGHT_BRACES  shift, and go to state 56

    $default  reduce using rule 6 (statement)

    statement        go to state 23
    var_declaration  go to state 8
    assignment       go to state 9
    for_loop         go to state 10


State 46

   16 bool_expression: expression EQUAL expression •
   22 expression: expression • PLUS term
   23           | expression • MINUS term

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    $default  reduce using rule 16 (bool_expression)


State 47

   17 bool_expression: expression GREATER expression •
   22 expression: expression • PLUS term
   23           | expression • MINUS term

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    $default  reduce using rule 17 (bool_expression)


State 48

   18 bool_expression: expression LESS expression •
   22 expression: expression • PLUS term
   23           | expression • MINUS term

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    $default  reduce using rule 18 (bool_expression)


State 49

   22 expression: expression PLUS term •
   25 term: term • TIMES factor
   26     | term • DIVIDE factor

    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    $default  reduce using rule 22 (expression)


State 50

   23 expression: expression MINUS term •
   25 term: term • TIMES factor
   26     | term • DIVIDE factor

    TIMES   shift, and go to state 36
    DIVIDE  shift, and go to state 37

    $default  reduce using rule 23 (expression)


State 51

   25 term: term TIMES factor •

    $default  reduce using rule 25 (term)


State 52

   26 term: term DIVIDE factor •

    $default  reduce using rule 26 (term)


State 53

   14 assignment: VAR IDENTIFIER • TYPE ASSIGN expression

    TYPE  shift, and go to state 57


State 54

   15 for_loop: FOR LEFT_PARENTHESIS assignment SEMICOLON • bool_expression SEMICOLON assignment RIGHT_PARENTHESIS block

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    bool_expression  go to state 58
    expression       go to state 17
    term             go to state 18
    factor           go to state 19


State 55

   12 var_declaration: VAR IDENTIFIER TYPE ASSIGN • expression
   14 assignment: VAR IDENTIFIER TYPE ASSIGN • expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    expression  go to state 59
    term        go to state 18
    factor      go to state 19


State 56

    5 block: LEFT_BRACES statements RIGHT_BRACES • BREAKLINE

    BREAKLINE  shift, and go to state 60


State 57

   14 assignment: VAR IDENTIFIER TYPE • ASSIGN expression

    ASSIGN  shift, and go to state 61


State 58

   15 for_loop: FOR LEFT_PARENTHESIS assignment SEMICOLON bool_expression • SEMICOLON assignment RIGHT_PARENTHESIS block
   19 bool_expression: bool_expression • OR bool_expression
   20                | bool_expression • AND bool_expression

    OR         shift, and go to state 27
    AND        shift, and go to state 28
    SEMICOLON  shift, and go to state 62


State 59

   12 var_declaration: VAR IDENTIFIER TYPE ASSIGN expression •
   14 assignment: VAR IDENTIFIER TYPE ASSIGN expression •
   22 expression: expression • PLUS term
   23           | expression • MINUS term

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    BREAKLINE  reduce using rule 12 (var_declaration)
    BREAKLINE  [reduce using rule 14 (assignment)]
    $default   reduce using rule 12 (var_declaration)


State 60

    5 block: LEFT_BRACES statements RIGHT_BRACES BREAKLINE •

    $default  reduce using rule 5 (block)


State 61

   14 assignment: VAR IDENTIFIER TYPE ASSIGN • expression

    NUMBER            shift, and go to state 12
    STRING            shift, and go to state 13
    IDENTIFIER        shift, and go to state 14
    LEFT_PARENTHESIS  shift, and go to state 15

    expression  go to state 63
    term        go to state 18
    factor      go to state 19


State 62

   15 for_loop: FOR LEFT_PARENTHESIS assignment SEMICOLON bool_expression SEMICOLON • assignment RIGHT_PARENTHESIS block

    IDENTIFIER  shift, and go to state 1
    VAR         shift, and go to state 38

    assignment  go to state 64


State 63

   14 assignment: VAR IDENTIFIER TYPE ASSIGN expression •
   22 expression: expression • PLUS term
   23           | expression • MINUS term

    PLUS   shift, and go to state 34
    MINUS  shift, and go to state 35

    $default  reduce using rule 14 (assignment)


State 64

   15 for_loop: FOR LEFT_PARENTHESIS assignment SEMICOLON bool_expression SEMICOLON assignment • RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 65


State 65

   15 for_loop: FOR LEFT_PARENTHESIS assignment SEMICOLON bool_expression SEMICOLON assignment RIGHT_PARENTHESIS • block

    LEFT_BRACES  shift, and go to state 29

    block  go to state 66


State 66

   15 for_loop: FOR LEFT_PARENTHESIS assignment SEMICOLON bool_expression SEMICOLON assignment RIGHT_PARENTHESIS block •

    $default  reduce using rule 15 (for_loop)
